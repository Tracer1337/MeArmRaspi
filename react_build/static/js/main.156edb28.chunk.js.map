{"version":3,"sources":["utils/scale.js","utils/constrain.js","components/Joystick/Joystick.js","config/constants.js","components/Slider/Slider.js","config/API.js","components/Controller/GridSlider.js","components/FloatingIconButton/FloatingIconButton.js","components/Controller/Controller.js","components/FloatingSwitch/FloatingSwitch.js","App.js","index.js"],"names":["scale","x","xMin","xMax","ymin","yMax","constrain","value","min","max","Joystick","onInput","size","smooth","defaultValue","useState","position","setPosition","container","useRef","containerRect","setContainerRect","thumb","thumbRect","setThumbRect","isMouseDown","setIsMouseDown","xConstraint","setXConstraint","yConstraint","setYConstraint","throttled","setThrottled","handleMouseDown","handleMouseUp","handleMouseMove","e","touches","clientX","left","width","y","clientY","top","height","constrainedX","constrainedY","relativeX","relativeY","setTimeout","useEffect","current","getBoundingClientRect","newX","clientWidth","offsetWidth","newY","clientHeight","style","transform","className","ref","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","onTouchMove","borderColor","backgroundColor","CustomSlider","withStyles","marginTop","marginLeft","track","opacity","rail","Slider","_Slider","onChange","setValue","Container","newValue","API_URI","fetchAPI","query","a","async","fetch","moveToPercentage","name","percentage","GridSlider","linkTo","Grid","item","direction","justify","minHeight","FloatingIconButton","Icon","onClick","SvgIcon","color","fontSize","Controller","mode","rightState","setRightState","leftState","setLeftState","resetKey","setResetKey","reset","alignItems","key","xs","xPercentage","yPercentage","Math","round","RotateLeft","FloatingSwitch","checked","setChecked","Switch","App","controllerMode","setControllerMode","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.156edb28.chunk.js","sourcesContent":["const scale = (x, xMin, xMax, ymin, yMax) => (((x - xMin) * (yMax - ymin)) / (xMax - xMin)) + ymin\r\nexport default scale","const constrain = (value, min, max) => value < min ? min : value > max ? max : value\r\nexport default constrain","import React, { useEffect, useState, useRef } from \"react\"\r\nimport \"./Joystick.css\"\r\n\r\nimport { DEFAULT_COLOR, SMOOTHEN_THROTTLE } from \"../../config/constants.js\"\r\nimport scale from \"../../utils/scale.js\"\r\nimport constrain from \"../../utils/constrain.js\"\r\n\r\nfunction Joystick({\r\n    onInput,\r\n    size,\r\n    smooth,\r\n    defaultValue\r\n}){\r\n    let [position, setPosition] = useState(\r\n        defaultValue ? \r\n        [\r\n            scale(defaultValue[0], 0, 100, -100, 100), \r\n            scale(defaultValue[1], 0, 100, -100, 100)\r\n        ] : \r\n        [0, 0]\r\n    )\r\n    let container = useRef(null)\r\n    let [containerRect, setContainerRect] = useState(null)\r\n    let thumb = useRef(null)\r\n    let [thumbRect, setThumbRect] = useState(null)\r\n    let [isMouseDown, setIsMouseDown] = useState(false)\r\n    let [xConstraint, setXConstraint] = useState([0, 0])\r\n    let [yConstraint, setYConstraint] = useState([0, 0])\r\n    let [throttled, setThrottled] = useState(false)\r\n\r\n    const handleMouseDown = () => {\r\n        setIsMouseDown(true)\r\n    }\r\n\r\n    const handleMouseUp = () => {\r\n        setIsMouseDown(false)\r\n    }\r\n\r\n    const handleMouseMove = e => {\r\n        if(isMouseDown){\r\n            if(e.touches){\r\n                e = e.touches[0]\r\n            }\r\n            \r\n            const x = e.clientX - containerRect.left - containerRect.width / 2\r\n            const y = e.clientY - containerRect.top - containerRect.height / 2\r\n\r\n            const constrainedX = constrain(x, xConstraint[0], xConstraint[1])\r\n            const constrainedY = constrain(y, yConstraint[0], yConstraint[1])\r\n\r\n            if (onInput){\r\n                const relativeX = scale(constrainedX, xConstraint[0], xConstraint[1], -100, 100)\r\n                const relativeY = scale(constrainedY, yConstraint[0], yConstraint[1], 100, -100)\r\n                if(!smooth || !throttled){\r\n                    setThrottled(true)\r\n                    onInput({ relativeX, relativeY })\r\n                    setTimeout(() => setThrottled(false), SMOOTHEN_THROTTLE)\r\n                }\r\n            }\r\n\r\n            setPosition([constrainedX, constrainedY])\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setContainerRect(container.current.getBoundingClientRect())\r\n        setThumbRect(thumb.current.getBoundingClientRect())\r\n    }, [container, thumb])\r\n\r\n    useEffect(() => {\r\n        if (!containerRect || !thumbRect) return\r\n\r\n        const xConstraint = [\r\n            -containerRect.width / 2 + thumbRect.width / 2,\r\n            containerRect.width / 2 - thumbRect.width / 2\r\n        ]\r\n        setXConstraint(xConstraint)\r\n\r\n        const yConstraint = [\r\n            -containerRect.height / 2 + thumbRect.height / 2,\r\n            containerRect.height / 2 - thumbRect.height / 2\r\n        ]\r\n        setYConstraint(yConstraint)\r\n    }, [containerRect, thumbRect])\r\n\r\n    useEffect(() => {\r\n        const newX = container.current.clientWidth / 2 + position[0] - thumb.current.offsetWidth / 2\r\n        const newY = container.current.clientHeight / 2 + position[1] - thumb.current.offsetWidth / 2\r\n        thumb.current.style.transform = `translate(${newX}px, ${newY}px)`\r\n    }, [position])\r\n\r\n    return (\r\n        <div className=\"joystick\" style={{width: size, height: size}}>\r\n            <div \r\n                className=\"inner-container\" \r\n                ref={container} \r\n                onMouseDown={handleMouseDown}\r\n                onMouseUp={handleMouseUp}\r\n                onMouseMove={handleMouseMove}\r\n                onTouchStart={handleMouseDown}\r\n                onTouchEnd={handleMouseUp}\r\n                onTouchMove={handleMouseMove}\r\n                style={{borderColor: DEFAULT_COLOR}}\r\n            >\r\n                <div className=\"thumb\" ref={thumb} style={{backgroundColor: DEFAULT_COLOR}}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Joystick","export const DEFAULT_COLOR = \"#2c3e50\"\r\n\r\nexport const SMOOTHEN_THROTTLE = 1000 / 15","import React, { useState } from \"react\"\r\nimport { Slider, Container, withStyles } from \"@material-ui/core\"\r\nimport { DEFAULT_COLOR, SMOOTHEN_THROTTLE} from \"../../config/constants.js\"\r\n\r\nconst sliderThumbSize = 30\r\nconst railHeight = 5\r\n\r\nconst CustomSlider = withStyles({\r\n    thumb: {\r\n        height: sliderThumbSize,\r\n        width: sliderThumbSize,\r\n        marginTop: -sliderThumbSize / 2,\r\n        marginLeft: -sliderThumbSize / 2,\r\n        backgroundColor: DEFAULT_COLOR\r\n    },\r\n\r\n    track: {\r\n        opacity: 0,\r\n    },\r\n\r\n    rail: {\r\n        height: railHeight,\r\n        marginTop: -railHeight / 2,\r\n        backgroundColor: DEFAULT_COLOR\r\n    }\r\n})(Slider)\r\n\r\nfunction _Slider({\r\n    onChange,\r\n    defaultValue,\r\n    smooth\r\n}) {\r\n    let [value, setValue] = useState(defaultValue || 0)\r\n    let [throttled, setThrottled] = useState(false)\r\n\r\n    const handleChange = (e, newValue) => {\r\n        if(!smooth || !throttled){\r\n            setThrottled(true)\r\n            onChange(newValue)\r\n            setTimeout(() => setThrottled(false), SMOOTHEN_THROTTLE)\r\n        }\r\n        setValue(newValue)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <CustomSlider\r\n                value={value}\r\n                onChange={handleChange}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default _Slider","const API_HOST = \"192.168.178.40\"\r\nconst API_PORT = \"5000\"\r\nconst API_URI = `http://${API_HOST}:${API_PORT}/api/`\r\n\r\nasync function fetchAPI(query){\r\n    return await fetch(API_URI + query)\r\n}\r\n\r\nasync function fetchJSON(query){\r\n    return await (await fetchAPI(query)).json()\r\n}\r\n\r\nconst getDevices = async () => await fetchJSON(\"devices\")\r\n\r\nconst moveToPercentage = async (name, percentage, throttled=false) => await fetchAPI(`move_to_percentage?servo_name=${name}&percentage=${percentage}&throttled=${throttled ? true : false}`)\r\n\r\nconst reset = async () => await fetchAPI(\"reset\")\r\n\r\nexport {\r\n    getDevices,\r\n    moveToPercentage,\r\n    reset\r\n}","import React from \"react\"\r\nimport { Grid } from \"@material-ui/core\"\r\n\r\nimport Slider from \"../Slider/Slider.js\"\r\n\r\nimport { moveToPercentage } from \"../../config/API.js\"\r\n\r\nfunction GridSlider({\r\n    linkTo,\r\n    defaultValue,\r\n    onChange\r\n}){\r\n    const handleChange = (value) => {\r\n        if(onChange){\r\n            onChange(value)\r\n        }\r\n        moveToPercentage(linkTo, value)\r\n    }\r\n\r\n    return (\r\n        <Grid item direction=\"column\" container justify=\"center\" style={{ minHeight: \"50vh\" }}>\r\n            <Slider\r\n                defaultValue={defaultValue || 0}\r\n                onChange={handleChange}\r\n                smooth\r\n            />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default GridSlider","import React from \"react\"\r\nimport { SvgIcon } from \"@material-ui/core\"\r\n\r\nimport \"./FloatingIconButton.css\"\r\n\r\nfunction FloatingIconButton({\r\n    Icon,\r\n    onClick\r\n}) {\r\n    return (\r\n        <div className=\"floating-icon-button\">\r\n            <SvgIcon\r\n                color=\"action\"\r\n                onClick={onClick}\r\n                fontSize=\"large\"\r\n            >\r\n                <Icon/>    \r\n            </SvgIcon>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FloatingIconButton","import React, { useEffect, useState } from \"react\"\r\nimport { Grid } from \"@material-ui/core\"\r\nimport { RotateLeft } from \"@material-ui/icons\"\r\n\r\nimport Joystick from \"../Joystick/Joystick.js\"\r\nimport GridSlider from \"./GridSlider.js\"\r\nimport FloatingIconButton from \"../FloatingIconButton/FloatingIconButton.js\"\r\n\r\nimport { moveToPercentage } from \"../../config/API.js\"\r\nimport scale from \"../../utils/scale.js\"\r\n\r\nconst defaultState = 50\r\n\r\nfunction Controller({\r\n    mode\r\n}){\r\n    let [rightState, setRightState] = useState(defaultState)\r\n    let [leftState, setLeftState] = useState(defaultState)\r\n    let [resetKey, setResetKey] = useState(0)\r\n\r\n    const forceReload = () => setResetKey(++resetKey)\r\n\r\n    const handleJoystick = (e) => {\r\n        const xPercentage = scale(e.relativeX, -100, 100, 0, 100)\r\n        const yPercentage = scale(e.relativeY, -100, 100, 100, 0)\r\n        moveToPercentage(\"right\", Math.round(xPercentage))\r\n        moveToPercentage(\"left\", Math.round(yPercentage))\r\n        setRightState(xPercentage)\r\n        setLeftState(yPercentage)\r\n    }\r\n\r\n    const reset = () => {\r\n        moveToPercentage(\"right\", defaultState)\r\n        moveToPercentage(\"left\", defaultState)\r\n        moveToPercentage(\"base\", 0, true)\r\n        moveToPercentage(\"grapper\", 0)\r\n        setRightState(defaultState)\r\n        setLeftState(defaultState)\r\n        forceReload()\r\n    }\r\n\r\n    useEffect(reset, [])\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            style={{ minHeight: \"100vh\" }}\r\n            key={resetKey}\r\n        >\r\n            <Grid item xs={6} container justify=\"center\">\r\n                {mode === 0 ? (\r\n                    <Joystick onInput={handleJoystick} size={300} smooth defaultValue={[rightState, leftState]}/>\r\n                ) : mode === 1 ? (\r\n                    <>\r\n                        <GridSlider linkTo=\"right\" defaultValue={rightState} onChange={setRightState}/>\r\n                        <GridSlider linkTo=\"left\" defaultValue={leftState} onChange={setLeftState}/>\r\n                    </>\r\n                ): null}\r\n            </Grid>\r\n            \r\n            <Grid item xs={6} direction=\"column\" container style={{ minHeight: \"100vh\" }}>\r\n                <GridSlider linkTo=\"grapper\"/>\r\n                <GridSlider linkTo=\"base\"/>\r\n            </Grid>\r\n\r\n            <FloatingIconButton Icon={RotateLeft} onClick={reset}/>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Controller","import React, { useState } from \"react\"\r\nimport { Switch } from \"@material-ui/core\"\r\n\r\nimport \"./FloatingSwitch.css\"\r\n\r\nfunction FloatingSwitch({\r\n    onChange\r\n}){\r\n    let [checked, setChecked] = useState(false)\r\n\r\n    const handleChange = () => {\r\n        setChecked(!checked)\r\n        onChange(!checked)\r\n    }\r\n\r\n    return (\r\n        <div className=\"floating-switch-container\">\r\n            <Switch\r\n                checked={checked}\r\n                onChange={handleChange}\r\n                color=\"default\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FloatingSwitch","import React, { useState } from \"react\"\n\nimport Controller from \"./components/Controller/Controller.js\"\nimport FloatingSwitch from \"./components/FloatingSwitch/FloatingSwitch.js\"\n\nimport \"./App.css\"\n\nfunction App() {\n  let [controllerMode, setControllerMode] = useState(0)\n\n  const handleSwitchChange = (value) => {\n    setControllerMode(value ? 1 : 0)\n  }\n\n  return (\n    <div className=\"App\">\n      <Controller mode={controllerMode}/>\n      <FloatingSwitch onChange={handleSwitchChange}/>\n    </div>\n  )\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {CssBaseline} from \"@material-ui/core\"\nimport App from \"./App\"\n\nReactDOM.render(<CssBaseline><App/></CssBaseline>, document.getElementById(\"root\"))"],"sourceRoot":""}